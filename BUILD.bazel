load(
    "//ign_bazel:build_defs.bzl",
    "IGNITION_ROOT",
    "IGNITION_VISIBILITY",
    "cmake_configure_file",
    "generate_include_header",
    "generate_yaml",
    "ign_config_header",
    "ign_export_header",
)
load(
    "@bazelruby_rules_ruby//ruby:defs.bzl",
    "ruby_binary",
    "ruby_library",
    "ruby_rspec",
    "ruby_test",
)

package(default_visibility = ["//visibility:public"])

PROJECT_NAME = "ignition-fuel-tools"

PROJECT_MAJOR = 5

PROJECT_MINOR = 0

PROJECT_PATCH = 0

IGN_DESIGNATION = "/tmp"

CMAKE_INSTALL_PREFIX = "/tmp"

CMAKE_INSTALL_DATAROOTDIR = "/tmp"

library_location = "/usr"

IGN_LIBRARY_PATH = "/usr"

# Generates config.hh based on the version numbers in CMake code.
ign_config_header(
    name = "config",
    src = "include/ignition/fuel_tools/config.hh.in",
    out = "include/ignition/fuel_tools/config.hh",
    cmakelists = ["CMakeLists.txt"],
    extra_defines = [
        "PROJECT_NAME_LOWER=ignition-fuel-tools",
        "CMAKE_INSTALL_PREFIX=./ign_fuel_tools/",
        "CMAKE_INSTALL_DATAROOTDIR=./ign_fuel_tools/",
    ],
    project_name = PROJECT_NAME,
    project_version = (PROJECT_MAJOR, PROJECT_MINOR, PROJECT_PATCH),
)

ign_export_header(
    name = "include/ignition/fuel_tools/Export.hh",
    export_base = "IGNITION_FUEL_TOOLS",
    lib_name = "ignition-fuel-tools",
    visibility = ["//visibility:private"],
)

public_headers_no_gen = glob([
    "include/ignition/fuel_tools/*.hh",
])

private_headers = [
    "src/ModelIterPrivate.hh",
    "src/ModelPrivate.hh",
    "src/WorldIterPrivate.hh",
]

sources = [
    "src/ClientConfig.cc",
    "src/FuelClient.cc",
    "src/ign.cc",
    "src/Interface.cc",
    "src/JSONParser.cc",
    "src/LocalCache.cc",
    "src/Model.cc",
    "src/ModelIdentifier.cc",
    "src/ModelIter.cc",
    "src/RestClient.cc",
    "src/Result.cc",
    "src/WorldIdentifier.cc",
    "src/WorldIter.cc",
    "src/Zip.cc",
]

test_sources = [
    "src/ClientConfig_TEST.cc",
    "src/FuelClient_TEST.cc",
    "src/ign_src_TEST.cc",
    # "src/ign_TEST.cc",
    # Below test fails due to URL 404, not the code/build
    #"src/Interface_TEST.cc",
    "src/JSONParser_TEST.cc",
    "src/LocalCache_TEST.cc",
    "src/ModelIdentifier_TEST.cc",
    "src/ModelIter_TEST.cc",
    "src/Model_TEST.cc",
    "src/RestClient_TEST.cc",
    "src/Result_TEST.cc",
    "src/WorldIdentifier_TEST.cc",
    "src/WorldIter_TEST.cc",
    "src/Zip_TEST.cc",
]

generate_include_header(
    name = "fuel_toolshh_genrule",
    out = "include/ignition/fuel_tools.hh",
    hdrs = public_headers_no_gen + [
        "include/ignition/fuel_tools/config.hh",
        "include/ignition/fuel_tools/Export.hh",
    ],
)

public_headers = public_headers_no_gen + [
    "include/ignition/fuel_tools/config.hh",
    "include/ignition/fuel_tools/Export.hh",
    "include/ignition/fuel_tools.hh",
    "src/ign.hh",
]

cc_binary(
    name = "libignition-fuel-tools5.so",
    srcs = sources + private_headers + public_headers,
    copts = [
        "-Iexternal/json",
    ],
    includes = ["include"],
    linkopts = [
        "-Wl,-soname,libignition-fuel-tools5.so",
        "-lyaml",
        "-ljsoncpp",
        "-lcurl",
        "-lzip",
    ],
    linkshared = True,
    visibility = [],
    deps = [
        "//ign_common",
        "//ign_msgs",
        "@json//:headers",
    ],
)

cc_library(
    name = "ign_fuel_tools",
    srcs = ["libignition-fuel-tools5.so"],
    hdrs = public_headers + private_headers,
    copts = [
        "-Iexternal/json",
    ],
    includes = ["include"],
    visibility = ["//visibility:public"],
    deps = [
        "//ign_bazel:utilities",
        "//ign_common",
        "//ign_msgs",
        "@json//:headers",
    ],
)

[cc_test(
    name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
    srcs = [src] + private_headers,
    deps = [
        "//ign_common",
        "//ign_fuel_tools",
        "//ign_fuel_tools/test:test_utils",
        "@gtest",
        "@gtest//:gtest_main",
    ],
) for src in test_sources]

exports_files(["src/cmd/cmdfuel.rb.in"])
