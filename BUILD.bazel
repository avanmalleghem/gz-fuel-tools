load(
    "//ign_bazel:cmake_configure_file.bzl",
    "cmake_configure_file",
)
load(
    "//ign_bazel:generate_include_header.bzl",
    "generate_include_header",
)
load(
    "//ign_bazel:generate_file.bzl",
    "generate_file",
)

package(default_visibility = ["//visibility:public"])

PROJECT_NAME = "ignition-fuel-tools"
PROJECT_MAJOR = 4
PROJECT_MINOR = 1
PROJECT_PATCH = 0
IGN_DESIGNATION = "/tmp"
CMAKE_INSTALL_PREFIX = "/tmp"
CMAKE_INSTALL_DATAROOTDIR = "/tmp"

# Generates config.hh based on the version numbers in CMake code.
cmake_configure_file(
    name = "config",
    src = "include/ignition/fuel_tools/config.hh.in",
    out = "include/ignition/fuel_tools/config.hh",
    cmakelists = ["CMakeLists.txt"],
    defines = [
        "PROJECT_VERSION_MAJOR=%d" % (PROJECT_MAJOR),
        "PROJECT_MAJOR_VERSION=%d" % (PROJECT_MAJOR),
        "PROJECT_MINOR_VERSION=%d" % (PROJECT_MINOR),
        "PROJECT_PATCH_VERSION=%d" % (PROJECT_PATCH),
        "PROJECT_VERSION_PATCH=%d" % (PROJECT_PATCH),
        "PROJECT_VERSION_MAJOR=%d" % (PROJECT_MAJOR),
        "PROJECT_VERSION_MINOR=%d" % (PROJECT_MINOR),
        "PROJECT_VERSION=%d.%d" % (PROJECT_MAJOR, PROJECT_MINOR),
        "PROJECT_VERSION_FULL=%d.%d.%d" % (PROJECT_MAJOR, PROJECT_MINOR, PROJECT_PATCH),  # noqa
        "PROJECT_NAME_NO_VERSION=%s" % (PROJECT_NAME),
        "PROJECT_NAME=%s" % (PROJECT_NAME),
        "PROJECT_NAME_LOWER=%s" % (PROJECT_NAME),
        "IGN_DESIGNATION=%s" % (IGN_DESIGNATION),
        "CMAKE_INSTALL_PREFIX=%s" % (CMAKE_INSTALL_PREFIX),
        "CMAKE_INSTALL_DATAROOTDIR=%s" % (CMAKE_INSTALL_DATAROOTDIR),

    ],
    visibility = ["//visibility:private"],
)

generate_file(
    name = "include/ignition/fuel_tools/Export.hh",
    content = """
#pragma once
// IGN_DEPRECATED is defined by all ignition libraries, but the version below
// is a simplified version.  When mixing the regular ignition libraries and
// the drake compiled ignition libraries, the compiler throws a warning about
// the macro being multiply defined.  We undefine it before redefining it here
// to work around that issue.  Note that the IGNITION_FUEL_TOOLS_VISIBLE macro
// shouldn't be defined multiple times, but we undefine it just in case.
#ifdef IGNITION_FUEL_TOOLS_VISIBLE
#undef IGNITION_FUEL_TOOLS_VISIBLE
#endif
#define IGNITION_FUEL_TOOLS_VISIBLE __attribute__ ((visibility("default")))
#ifdef IGN_DEPRECATED
#undef IGN_DEPRECATED
#endif
#define IGN_DEPRECATED(version) __attribute__ ((__deprecated__))
    """,
    visibility = ["//visibility:private"],
)

public_headers_no_gen = [
    "include/ignition/fuel_tools/ClientConfig.hh",
    "include/ignition/fuel_tools/FuelClient.hh",
    "include/ignition/fuel_tools/Helpers.hh",
    "include/ignition/fuel_tools/Interface.hh",
    "include/ignition/fuel_tools/JSONParser.hh",
    "include/ignition/fuel_tools/LocalCache.hh",
    "include/ignition/fuel_tools/Model.hh",
    "include/ignition/fuel_tools/ModelIdentifier.hh",
    "include/ignition/fuel_tools/ModelIter.hh",
    "include/ignition/fuel_tools/RestClient.hh",
    "include/ignition/fuel_tools/Result.hh",
    "include/ignition/fuel_tools/WorldIdentifier.hh",
    "include/ignition/fuel_tools/WorldIter.hh",
    "include/ignition/fuel_tools/Zip.hh",
]

private_headers = [
    "include/ignition/fuel_tools/ModelIterPrivate.hh",
    "include/ignition/fuel_tools/ModelPrivate.hh",
    "include/ignition/fuel_tools/WorldIterPrivate.hh",
]

sources = [
    "src/ClientConfig.cc",
    "src/FuelClient.cc",
    "src/ign.cc",
    "src/Interface.cc",
    "src/JSONParser.cc",
    "src/LocalCache.cc",
    "src/Model.cc",
    "src/ModelIdentifier.cc",
    "src/ModelIter.cc",
    "src/RestClient.cc",
    "src/Result.cc",
    "src/WorldIdentifier.cc",
    "src/WorldIter.cc",
    "src/Zip.cc",
]

test_sources = [
    "src/ClientConfig_TEST.cc",
    "src/FuelClient_TEST.cc",
    "src/ign_src_TEST.cc",
    # "src/ign_TEST.cc",
    "src/Interface_TEST.cc",
    "src/JSONParser_TEST.cc",
    "src/LocalCache_TEST.cc",
    "src/ModelIdentifier_TEST.cc",
    "src/ModelIter_TEST.cc",
    "src/Model_TEST.cc",
    "src/RestClient_TEST.cc",
    "src/Result_TEST.cc",
    "src/WorldIdentifier_TEST.cc",
    "src/WorldIter_TEST.cc",
    "src/Zip_TEST.cc",
]

generate_include_header(
    name = "fuel_toolshh_genrule",
    out = "include/ignition/fuel_tools.hh",
    hdrs = public_headers_no_gen + [
        "include/ignition/fuel_tools/config.hh",
        "include/ignition/fuel_tools/Export.hh",
    ],
)

public_headers = public_headers_no_gen + [
    "include/ignition/fuel_tools/config.hh",
    "include/ignition/fuel_tools/Export.hh",
    "include/ignition/fuel_tools.hh",
    "src/ign.hh",
]

cc_binary(
    name = "libignition_fuel_tools.so",
    srcs = sources + private_headers + public_headers,
    includes = ["include"],
    linkopts = ["-Wl,-soname,libignition_fuel_tools.so", "-lyaml"],
    linkshared = True,
    visibility = [],
    copts = [
        "-Iexternal/json",
    ],
    deps = [
        "//ign_common",
        "//ign_msgs",
        "@json//:headers",
    ],
)

cc_library(
    name = "ign_fuel_tools",
    srcs = ["libignition_fuel_tools.so"],
    hdrs = public_headers,
    includes = ["include"],
    visibility = ["//visibility:public"],
)

[cc_test(
    name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
    srcs = [src] + private_headers,
    deps = [
        "//ign_common",
        "//ign_fuel_tools",
        "//ign_fuel_tools/test:test_utils",
        "@gtest//:gtest",
        "@gtest//:gtest_main",
    ],
) for src in test_sources]
